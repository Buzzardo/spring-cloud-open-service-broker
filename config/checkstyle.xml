<?xml version="1.0"?>
<!--
  ~ Copyright 2002-2019 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN" "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="com.puppycrawl.tools.checkstyle.Checker">

    <!-- License Header -->
    <module name="Header">
        <property name="headerFile" value="config/license.header"/>
        <property name="ignoreLines" value="2, 8"/>
    </module>

    <!-- TreeWalker Checks -->
    <module name="com.puppycrawl.tools.checkstyle.TreeWalker">
        <module name="com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck">
            <property name="id" value="bannedJUnit3Imports"/>
            <property name="regexp" value="true" />
            <property name="illegalClasses" value="^junit\.framework\..+" />
        </module>
        <module name="com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck">
            <property name="id" value="bannedJUnit4Imports"/>
            <property name="regexp" value="true" />
            <property name="illegalClasses"
                      value="^org\.junit\.(Test|BeforeClass|AfterClass|Before|After|Ignore|FixMethodOrder|Rule|ClassRule|Assert|Assume)$,^org\.junit\.(Assert|Assume)\..+,^org\.junit\.(experimental|internal|matchers|rules|runner|runners|validator)\..+" />
        </module>
        <module name="com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck">
            <property name="id" value="bannedTestNGImports"/>
            <property name="regexp" value="true" />
            <property name="illegalClasses" value="^org\.testng\..+," />
        </module>
        <module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
            <property name="maximum" value="0" />
            <property name="format"
                      value="assertThatExceptionOfType\((NullPointerException|IllegalArgumentException|IOException|IllegalStateException)\.class\)" />
            <property name="message"
                      value="Please use specialized AssertJ assertThat*Exception method." />
            <property name="ignoreComments" value="true" />
        </module>
        <module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
            <property name="id" value="bddMockito"/>
            <property name="maximum" value="0"/>
            <property name="format" value="org\.mockito\.Mockito\.(when|doThrow|doAnswer)" />
            <property name="message" value="Please use BDDMockito." />
            <property name="ignoreComments" value="true" />
        </module>
        <module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
            <property name="id" value="expectedExceptionAnnotation"/>
            <property name="maximum" value="0"/>
            <property name="format" value="\@Test\(expected" />
            <property name="message" value="Please use AssertJ assertions." />
            <property name="ignoreComments" value="true" />
        </module>
        <module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
            <property name="id" value="junit4Assertions"/>
            <property name="maximum" value="0"/>
            <property name="format" value="org\.junit\.Assert\.assert" />
            <property name="message" value="Please use AssertJ assertions." />
            <property name="ignoreComments" value="true" />
        </module>
        <module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
            <property name="id" value="junitJupiterAssertions"/>
            <property name="maximum" value="0"/>
            <property name="format" value="org\.junit\.jupiter\.api\.Assertions\.assert(?!Throws).*" />
            <property name="message" value="Please use AssertJ assertions." />
            <property name="ignoreComments" value="true" />
        </module>
        <module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
            <property name="id" value="testNGAssertions"/>
            <property name="maximum" value="0"/>
            <!-- should cover org.testng.Assert and org.testng.AssertJUnit -->
            <property name="format" value="org\.testng\.Assert(JUnit)?\.assert" />
            <property name="message" value="Please use AssertJ assertions." />
            <property name="ignoreComments" value="true" />
        </module>
    </module>
</module>
